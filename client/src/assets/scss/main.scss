@import "./foundation/settings";
@import "~foundation-sites/scss/foundation";
@include foundation-everything;
// place global css here
*,
*::before,
*::after {
    box-sizing: border-box;
}

:root {
    -moz-tab-size: 4;
    tab-size: 4;
}

.project-list {
    text-align: left;
    margin: 1rem 1rem 1rem 1rem;
}

.button {
    outline-style: solid;
    outline-color: gray;
}

.radio-options {
    border: none;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    break-before: always;
    margin: 0 0 3em 0;
}

.radio-button {
    font-weight: bold;
    margin: 0 1em 0 0;
}

.text {
    &-grayed {
        color: gray;
    }
    &-bold {
        font-weight: bold;
    }
    &-height-varies-p {
        font-size: 1.5vw;
    }
    &-height-varies-h1 {
        font-size: 5vw;
    }
}

.sprite {
    width: auto;
    &-list {
        @extend .sprite;
        height: 50px;
    }
    &-show {
        @extend .sprite;
        height: 12vw;
    }
}

.layer{
    &-1 {
        z-index: 1;
    }
}

.image {
    display: block;
    &-left-pane {
        @extend .image;
        margin-left: auto;
        margin-right: auto;
        width: 75%;
    }
    &-type-label {
        @extend .image;
        margin-right: .3rem;
        margin-top: 7px;
        height: 35px;
        width: auto;
    }
    &-show {
        &-label {
            width: 15vw;
            height: auto;
        }
    }
    &-arrow {
        display: block;
        height: 1rem;
        width: 100%;
    }
}

.margins {
    margin-left: 3rem;
    margin-right: 3rem;
    &-small {
        margin-left: 1rem;
    }
    &-even {
        &-1rem {
            margin-left: 1rem;
            margin-right: 1rem;
        }
    }
}

.flex {
    display: flex;
    &-center {
        @extend .flex;
        justify-content: center;
        align-content: center;
        &-vertical {
            @extend .flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }
    }
    &-type-icons {
        @extend .flex;
        justify-content: left;
    }
    &-left {
        @extend .flex;
        justify-content: left;
        align-content: center;
    }
    &-right {
        @extend .flex;
        justify-content: right;
        align-content: center;
    }
    &-between {
        display: flex;
        justify-content: space-between;
    }
    &-around {
        display: flex;
        justify-content: space-around;
        align-items: center;
        &-top {
            display: flex;
            justify-content: space-around;
            align-items: flex-start;
        }
    }
    &-list-item {
        @extend .flex;
        align-items: center;
        align-self: center;
        align-content: center;
        justify-content: space-between;
        margin-left: 0.1rem;
        margin-right: 1rem;
        height: 3rem;
        p {
            padding-top: 1rem;
        }
        &-small-types {
            display: flex;
            align-items: center;
            margin-top: 3px;
        }
    }
    &-show-top {
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        align-content: center;
        align-items: left;
    }
    &-single-ability {
        display: flex;
        justify-content: left;
        margin-left: 3vw;
        align-items: center;
    }
    &-single-stat {
        display: flex;
        align-items: center;
    }
    &-arrow {
        display: flex;
        align-items: center;
        p {
            margin: 0;
        }
    }
    &-menu-item {
        justify-content: center;
        align-content: center;
        display: flex;
        margin: 1rem 3rem;
    }
    &-edit-button {
        display: flex;
        justify-content: right;
        align-content: flex-start;
        margin: 1rem;
    }
}

.poke-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    height: 93vh;
    &-vert {
        &-show {
            display: grid;
            grid-template-rows: 10vw 10vw 1fr;
        }
    }
    h1 {
        text-align: center;
        margin: 1.5rem 0rem;
    }
    &-project-list {
        @extend .poke-grid;
        grid-template-columns: 1fr 2fr;
    }
    &-pokedex-list {
        @extend .poke-grid;
        grid-template-columns: 25% 1fr;
    }
    &-pokedex-show {
        @extend .poke-grid;
        grid-template-columns: 25% 1fr 3fr;
    }
    &-normalized {
        grid-column-end: span 2;
    }
    &-show-top {
        @extend .poke-grid;
        grid-template-columns: 1fr 1fr 1fr;
        // grid-template-rows: 10vw;
    }
    &-list-info {
        display: grid;
        grid-template-columns: 7fr 21fr 40fr;
        &-header {
            display: grid;
            grid-template-columns: 22.25fr 7fr 21fr 40fr;
        }
    }
    &-abilities-list {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
    }
    &-stats-list {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
    }
}

.stat-grid {
    display: grid;
    
}

.overflow {
    &-scroll {
        overflow-y: scroll;
    }
}

.list-grid {
    display: grid;
    grid-template-columns: 1fr 3fr;
}

.list-mon {
    border-top-style: solid;
    border-bottom-style: solid;
    border-width: 1px;
    border-color: gray;
    cursor: pointer;
}

.nav-pane {
    border-width: 4px;
    &-left {
        @extend .nav-pane;
        border-right-style: solid;
        border-right-color: gray;
        background-color: #4d0000;
    }
    &-right {
        @extend .nav-pane;
        border-left-style: solid;
        border-left-color: gray;
    }
}

.top-bar {
    background-color: gray;
    height: 7vh;
    .menu {
        background-color: gray;
    }
    a {
        color: white;
    }
}

$grid__bp--md: 768;
$grid__cols: 12;
.container {
    max-width: $grid__bp--md * 1px;
    margin: 0 auto;
    &--fluid {
        margin: 0;
        max-width: 100%;
    }
    &__row {
        display: flex;
        flex-wrap: wrap;
        width: 100%;
    }
    @for $i from 1 through $grid__cols {
        &__col-sm-#{$i} {
            flex-basis: (100 / ($grid__cols / $i)) * 1%;
        }
    }
    @for $i from 1 through $grid__cols {
        &__col-md-#{$i} {
            flex-basis: (100 / ($grid__cols / $i)) * 1%;
        }
    }
}
